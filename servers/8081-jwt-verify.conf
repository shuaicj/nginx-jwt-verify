server {
    listen       8081;
    server_name  localhost;

    location / {
        access_by_lua_block {

            local header = ngx.var.http_authorization
            if header == nil then
                ngx.log(ngx.ERR, "no header 'Authorization'")
                ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end

            local _, _, token = string.find(header, "Bearer%s+(.+)")
            if token == nil then
                ngx.log(ngx.ERR, "no 'Bearer' token")
                ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end

            local secret = "otherpeopledontknowit"

            local jwt = require "resty.jwt"
            local validators = require "resty.jwt-validators"
            local obj = jwt:verify(secret, token, {
                -- exp = validators.opt_is_not_expired(),
                roles = validators.contains_any_of({ "ROLE_ADMIN" })
            })

            if not obj.verified then
                local cjson = require "cjson"
                ngx.log(ngx.ERR, cjson.encode(obj))

                local prefix = "Claim 'roles'"
                if obj.reason:sub(1, prefix:len()) == prefix then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                else
                    ngx.exit(ngx.HTTP_UNAUTHORIZED)
                end
            end
        }

        proxy_pass http://localhost:8080;
    }
}
